#include <math.h>
float am[2][8] = {{476.2,535.1,459.5,447.5,592.2,-64.101,65.02,-22.92},{8.521867297,18.35120341,5.233439489,2.173067468,11.79265308,73.2258818,5.907343829,4.93927795}};			
float bm[2][8] = {{524.6,409,417.2,417.9,409.3,-33.146,75.051,-13.55},{17.90840895,5.811865258,2.347575582,0.567646212,5.831904587,94.85701183,6.734545188,6.09172663}};		
float cm[2][8] = {{469.2,413.5,423.6,423.8,445.6,-8.805,57.955,-28.829},{6.596295257,3.865804502,3.204163958,1.619327707,15.94574133,116.024668,6.520465645,5.642293564}};
float dm[2][8] = {{519.6,498.5,449.8,416.1,545.2,-38.648,63.139,-22.95},{16.41273219,34.98332936,3.224903099,0.737864787,21.73987632,118.2375102,2.632828855,2.360423691}};
float em[2][8] = {{531.7,553.7,458.3,446.6,585.6,1.636,81.008,-0.893},{5.207899982,14.5300455,1.567021236,1.0749677,9.924156835,111.9647245,6.470795589,8.600038824}};
float fm[2][8] = {{503,412.6,417.3,445.1,410.3,-7.016,75.363,1.101},{13.16561177,5.521674464,1.251665557,5.685263602,10.08904797,89.52646985,4.308263507,7.802842004}};
float gm[2][8] = {{466.4,554.1,459.3,418.8,585.8,-38.354,42.54,-27.118},{6.552353267,6.436872947,1.82878223,0.788810638,9.028350409,72.03611119,4.29700671,8.201571394}};
float hm[2][8] = {{512.4,512.5,417.1,416.7,540.4,-11.993,-1.606,-75.082},{3.306559138,17.33493582,0.875595036,0.674948558,6.518350166,6.263765374,5.229296107,2.539334121}};
float im[2][8] = {{517.2,424.8,459.6,444.6,540.4,78.554,79.301,-7.859},{14.71054044,6.390965846,6.736302976,3.83550663,23.79635826,8.64909141,4.390230189,7.223331718}};
float jm[2][8] = {{503.1,418.2,457.2,444,537.3,-106.67,60.894,7.656},{18.699079,3.119829055,5.138093031,2.357022604,16.09036979,7.552334444,8.128170766,8.238713762}};
float km[2][8] = {{482.6,543.1,418,416.7,554.1,81.924,81.257,-0.776},{2.796823595,15.45926547,0.816496581,0.674948558,10.12642308,3.801880237,3.322549389,1.278438283}};
float lm[2][8] = {{451.2,515.9,464.1,417.2,586.8,99.045,64.296,-7.932},{6.460134158,27.79868102,2.514402955,1.229272594,9.5312352,17.74982895,6.182563654,5.689561202}};
float mm[2][8] = {{533.7,518,445,442.1,535.6,96.197,71.338,15.321},{31.90976862,35.45889639,5.436502143,4.067486256,19.05080926,5.630208305,3.68194031,3.841803541}};
float nm[2][8] = {{533.5,556.9,449.3,443,552.2,101.014,75.74,13.659},{27.39931062,12.01341842,2.584139659,1.943650632,17.51063169,1.962199446,4.150579611,3.822109511}};
float om[2][8] = {{475.4,439.8,442.7,438.9,486.4,-44.304,21.356,-26.024},{7.848566748,13.33999833,3.164033993,2.558211181,14.22204861,5.333556662,13.47608516,3.479397138}};
float pm[2][8] = {{466.5,546.6,419.7,416.5,527.5,115.55,-58.857,-17.531},{10.88577053,14.92350867,3.093002856,0.527046277,17.61470345,5.834302777,5.456502848,5.012070874}};
float qm[2][8] = {{443.1,560.3,463,417.7,585.5,142.743,-45.864,-24.51},{1.91195072,7.761013679,1.825741858,0.674948558,2.368778401,3.149247,3.802324435,2.667137458}};
float rm[2][8] = {{497.5,513,419.7,422.9,592.2,86.738,77.952,1.968},{8.618455649,22.42022896,1.159501809,11.68522334,41.89616795,2.303629021,6.100048816,3.208560771}};
float sm[2][8] = {{531.9,543.8,465.6,456.1,583.5,89.103,80.11,1.759},{3.034981237,8.916900308,1.776388346,5.466056877,6.240548409,3.954440682,3.211981043,3.666940747}};
float tm[2][8] = {{473.2,545,458.8,428.8,580.6,76.938,74.728,-9.555},{9.738811244,9.988882709,1.751190072,3.084008935,5.796550698,5.096449309,2.422922019,3.736523191}};
float um[2][8] = {{494.4,524.7,418.1,419.3,564.4,84.47,81.532,-4.92},{5.295700562,26.75007788,0.316227766,0.483045892,21.81334963,1.772681584,2.000565476,1.418872792}};
float vm[2][8] = {{498.4,475.5,417.9,418.6,590,77.826,77.545,-11.744},{3.470510689,38.87658536,0.316227766,0.516397779,23.31427793,3.427594557,3.311707348,3.267446166}};
float wm[2][8] = {{505.5,552.4,417.7,418.7,411.2,80.175,76.192,-9.323},{3.472111109,20.48956374,0.483045892,0.674948558,2.1499354,6.328872552,6.469249999,5.930572485}};
float xm[2][8] = {{538.1,544.8,461.6,435.7,585,44.365,59.148,-29.493},{18.35725712,15.09083607,3.062315754,4.164666186,12.40071683,19.27909994,6.879432793,6.074087128}};
float ym[2][8] = {{464.7,428.1,452.7,440.8,532.2,73.026,71.525,-16.965},{12.73708496,33.79168208,3.433495142,4.709328803,17.85621585,9.801581732,7.003688314,8.795491585}};
float zm[2][8] = {{494.2,520.5,460.5,417.4,567.6,14.759,13.391,-61.028},{9.795690663,14.37010786,2.068278941,0.516397779,6.736302976,5.677181323,3.405004324,9.610910236}};

double gausian[26][8];
double hasil[26];
double tertinggi;
float peluang = 1/26;
float totalp;
char huruf = 'a';
int index=0;
int gauske=0;
void perkalianpeluang()
{
  for(int i=0;i<26;i++)
  {
    for(int j=0;j<8;j++)
    {
      if (j==0)
      {
        hasil[i]=gausian[i][j];
      }
      else
      {
        hasil[i]=hasil[i]*gausian[i][j];
      }
    }
    hasil[i]=hasil[i]*peluang;
    //  Serial.print(hasil[i]);
   // Serial.print("\t");
  }
  //Serial.println();
}
void kesmipulan()
{
  for(int i = 0;i<26;i++)
  {
    if(i==0||tertinggi < hasil[i])
    {
     tertinggi = hasil[i];
     index = i+1; 
    }
  }
}
void cetakhuruf()
{
  for(int i=0;i<index;i++)
  {
    huruf++;
  }
  Serial.print(huruf);
}
void perhitungan(float aq[8],float base[2][8])
{
  double d,e,f,g;
  for(int i=0;i<8;i++)
  {
  d = 2*3.14*base[1][i];
  e = (-(((pow((aq[i]-base[0][i]),2))/(2*pow(base[1][i],2)))));
  f = pow(2.718282,e);
  g = 1/sqrt(d);
  gausian[gauske][i] = f*g;
  //Serial.print(gausian[gauske][i],10);
  //Serial.print("\t");
  }
  
  gauske++;
 //Serial.println();
  
}


void setup() {
  Serial.begin(9600);
  // put your setup code here, to run once:
}

void loop() {
  
  // put your main code here, to run repeatedly:
  float masukan[8] = {473,548,459,443,548,81.47,81.67,-8.32};
  perhitungan(masukan,am);
  perhitungan(masukan,bm);
  perhitungan(masukan,cm);
  perhitungan(masukan,dm);
  perhitungan(masukan,em);
  perhitungan(masukan,fm);
  perhitungan(masukan,gm);
  perhitungan(masukan,hm);
  perhitungan(masukan,im);
  perhitungan(masukan,jm);
  perhitungan(masukan,km);
  perhitungan(masukan,lm);
  perhitungan(masukan,mm);
  perhitungan(masukan,nm);
  perhitungan(masukan,om);
  perhitungan(masukan,pm);
  perhitungan(masukan,qm);
  perhitungan(masukan,rm);
  perhitungan(masukan,sm);
  perhitungan(masukan,tm);
  perhitungan(masukan,um);
  perhitungan(masukan,vm);
  perhitungan(masukan,wm);
  perhitungan(masukan,xm);
  perhitungan(masukan,ym);
  perhitungan(masukan,zm);
  delay(2000);
  gauske=0;
}
